//apply plugin: 'com.android.library'
apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        flavorDimensions "default"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        defaultConfig {
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = ["room.schemaLocation": "$projectDir/schemas".toString(),AROUTER_MODULE_NAME: project.getName()]
                }
            }
        }
    }

    def properties = getConfigProperties()

    signingConfigs {
        release {
            storeFile file(properties['STORE_FILE'])
            keyAlias properties['KEY_ALIAS']
            keyPassword properties['KEY_PASSWORD']
            storePassword properties['STORE_PASSWORD']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.release
            buildConfigField 'boolean', 'SHOW_MQTT_MESSAGE', "${properties['SHOW_MQTT_DEBUG']}"
        }
        release {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField 'boolean', 'SHOW_MQTT_MESSAGE', "${properties['SHOW_MQTT_RELASE']}"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            buildConfigField 'String', 'HOST', "${properties['HOST_DEV']}"
            buildConfigField 'String', 'HOST_MQTT', "${properties['HOST_MQTT_DEV']}"
        }
        uat {
            buildConfigField 'String', 'HOST', "${properties['HOST_UAT']}"
            buildConfigField 'String', 'HOST_MQTT', "${properties['HOST_MQTT_UAT']}"
        }
        prod {
            buildConfigField 'String', 'HOST', "${properties['HOST_PROD']}"
            buildConfigField 'String', 'HOST_MQTT', "${properties['HOST_MQTT_PROD']}"
        }
    }

}

def getConfigProperties() {
    def prop = new Properties()
    def is = project.rootProject.file('config.properties').newDataInputStream()
    prop.load(is)
    return prop
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //noinspection GradleCompatible
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    // dependency injection 依赖注入框架
    implementation 'com.google.dagger:dagger:2.17'
    // dagger的api
    implementation 'com.google.dagger:dagger-android-support:2.17'
    // Dagger 用于 Android 的拓展支持
    annotationProcessor "com.google.dagger:dagger-compiler:2.17"
    //指定注解处理器
    annotationProcessor "com.google.dagger:dagger-android-processor:2.17"

    // Gson
    implementation 'com.google.code.gson:gson:2.8.2'

    // network
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    // Rx 操作
    api 'io.reactivex.rxjava2:rxjava:2.1.1'
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.0.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.0.0'

    // utils
    implementation 'com.blankj:utilcode:1.19.0'

    // SharedPreferences
    //    implementation("com.marcinmoskala.PreferenceHolder:preferenceholder:1.51") {
    //        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    //    }
    //    implementation("com.marcinmoskala.PreferenceHolder:preferenceholder-gson-serializer:1.51") {
    //        exclude group: 'com.marcinmoskala.PreferenceHolder', module: 'preferenceholder'
    //        exclude group: 'com.google.code.gson', module: 'gson'
    //    }
    implementation('com.f2prateek.rx.preferences2:rx-preferences:2.0.0') {
        exclude group: 'io.reactivex.rxjava2'
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    implementation('com.jakewharton.rxrelay2:rxrelay:2.1.0') {
        exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
    }

    // database
    annotationProcessor "android.arch.persistence.room:runtime:1.1.1"
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"

    // debug database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.4'

    // mqtt
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'

    // debug,用于OKHttp调试
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    debugImplementation "com.amitshekhar.android:debug-db:1.0.4"

    // Arouter 路由框架
    implementation 'com.alibaba:arouter-api:1.4.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
}
